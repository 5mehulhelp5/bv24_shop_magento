<style>
    table#entriesList th,
    table#entriesList td {
        padding: 6px 10px;
        border: 1px solid #ddd;
    }

    table#entriesList {
        background: #fff;
    }

    .input-section {
        margin-bottom: 10px;
    }

    table#entriesList {
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.07);
        overflow: hidden;
        font-family: 'Segoe UI', Arial, sans-serif;
        font-size: 15px;
    }

    table#entriesList th {
        background: #f5f7fa;
        color: #333;
        font-weight: 600;
        border-bottom: 2px solid #e0e6ed;
    }

    table#entriesList tr:nth-child(even) {
        background: #f9fafb;
    }

    table#entriesList tr:hover {
        background: #e6f0fa;
        transition: background 0.2s;
    }

    table#entriesList td,
    table#entriesList th {
        padding: 12px 16px;
        border: 1px solid #ddd;
    }



    .input-section label {
        font-weight: 500;
        color: #222;
        margin-bottom: 4px;
        display: block;
    }

    .input-section input[type="text"],
    .input-section textarea,
    .input-section input[type="file"] {
        width: 100%;
        padding: 8px 10px;
        border: 1px solid #d1d5db;
        border-radius: 5px;
        background: #f8fafc;
        margin-top: 3px;
        font-size: 15px;
        transition: border 0.2s;
    }

    .input-section input[type="text"]:focus,
    .input-section textarea:focus,
    .input-section input[type="file"]:focus {
        border-color: #4f8cff;
        outline: none;
    }

    .input-section button[type="submit"] {
        background: linear-gradient(90deg, #4f8cff 0%, #1e90ff 100%);
        color: #fff;
        border: none;
        padding: 10px 28px;
        border-radius: 5px;
        font-size: 15px;
        font-weight: 600;
        cursor: pointer;
        box-shadow: 0 2px 6px rgba(79, 140, 255, 0.08);
        transition: background 0.2s;
    }

    .input-section button[type="submit"]:hover {
        background: linear-gradient(90deg, #1e90ff 0%, #4f8cff 100%);
    }

    #searchInput {
        border: 1px solid #d1d5db;
        border-radius: 5px;
        padding: 8px 12px;
        font-size: 15px;
        background: #f8fafc;
        transition: border 0.2s;
    }

    #searchInput:focus {
        border-color: #4f8cff;
        outline: none;
    }

    .delete-entry {
        background: #ff4d4f;
        color: #fff;
        border: none;
        padding: 7px 16px;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        transition: background 0.2s;
    }

    .delete-entry:hover {
        background: #d9363e;
    }

    a {
        color: #1e90ff;
        text-decoration: none;
        font-weight: 500;
    }

    a:hover {
        text-decoration: underline;
    }

    h1,
    h2 {
        font-family: 'Segoe UI', Arial, sans-serif;
        color: #222;
        font-weight: 700;
        margin-bottom: 12px;
    }

    hr {
        border: none;
        border-top: 1px solid #e0e6ed;
        margin: 30px 0;
    }

    .pagination-controls {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 18px;
        font-family: 'Segoe UI', Arial, sans-serif;
    }

    #pageSizeSelect {
        padding: 7px 14px;
        border: 1px solid #d1d5db;
        border-radius: 5px;
        background: #f8fafc;
        font-size: 15px;
        margin-left: 6px;
        margin-right: 16px;
        transition: border 0.2s;
    }

    #pageSizeSelect:focus {
        border-color: #4f8cff;
        outline: none;
    }

    #prevPageBtn,
    #nextPageBtn {
        background: linear-gradient(90deg, #4f8cff 0%, #1e90ff 100%);
        color: #fff;
        border: none;
        padding: 8px 22px;
        border-radius: 5px;
        font-size: 15px;
        font-weight: 600;
        cursor: pointer;
        box-shadow: 0 2px 6px rgba(79, 140, 255, 0.08);
        transition: background 0.2s, opacity 0.2s;
    }

    #prevPageBtn:disabled,
    #nextPageBtn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background: #e0e6ed;
        color: #888;
    }

    #prevPageBtn:hover:not(:disabled),
    #nextPageBtn:hover:not(:disabled) {
        background: linear-gradient(90deg, #1e90ff 0%, #4f8cff 100%);
    }

    #paginationInfo {
        font-size: 15px;
        color: #333;
        font-weight: 500;
        margin: 0 10px;
    }
    /* Weitere Styles ... */
</style>


<?php echo $block->getLayout()->getMessagesBlock()->toHtml(); ?>

<form action="<?= $block->getUrl('bv24tools/index/save') ?>" method="post" enctype="multipart/form-data">
    <input type="hidden" name="form_key" value="<?= $block->getFormKey() ?>" />

    <div class="input-section">
        <label for="title">Titel</label>
        <input type="text" name="title" id="title" required>
    </div>

    <div class="input-section">
        <label for="description">Beschreibung</label>
        <textarea name="description" id="description"></textarea>
    </div>

    <div class="input-section">
        <label for="pdf_file">PDF Datei</label>
        <input type="file" name="pdf_file" id="pdf_file" accept="application/pdf" required>
    </div>

    <div class="input-section">
        <button type="submit">Speichern</button>
    </div>
</form>

<hr>

<h2>Gespeicherte Einträge</h2>

<input type="text" id="searchInput" placeholder="Suchen..." style="margin-bottom:10px; width: 300px;">



<table id="entriesList" style="width:100%; border-collapse:collapse;">
    <thead>
        <tr>
            <th>ID</th>
            <th>Titel</th>
            <th>Beschreibung</th>
            <th>Dateiname</th>
            <th>Download</th>
            <th>Aktion</th>
        </tr>
    </thead>
    <tbody>
        <?php foreach ($block->getItems() as $item): ?>
            <tr data-id="<?= $item['id'] ?>">
                <td><?= $item['id'] ?></td>
                <td class="entry-title"><?= htmlspecialchars($item['title']) ?></td>
                <td><?= htmlspecialchars($item['description']) ?></td>
                <td><?= htmlspecialchars($item['file_name']) ?></td>
                <td>
                    <a href="<?= $block->getMediaUrl($item['file_name']) ?>" target="_blank">Download PDF</a>
                </td>
                <td>
                    <button class="delete-entry" data-id="<?= $item['id'] ?>" type="button">Löschen</button>
                </td>
            </tr>
        <?php endforeach; ?>
    </tbody>
</table>
<div style="margin-bottom:10px; margin-top:10px;" class="pagination-controls">
    <label for="pageSizeSelect">Einträge pro Seite:</label>
    <select id="pageSizeSelect">
        <option value="25">25</option>
        <option value="50">50</option>
        <option value="100">100</option>
    </select>
    <button id="prevPageBtn" type="button">Zurück</button>
    <span id="paginationInfo"></span>
    <button id="nextPageBtn" type="button">Weiter</button>
    <input type="hidden" id="currentPageInput" value="1">
</div>

<script>
    const table = document.getElementById('entriesList');
    const rows = Array.from(table.querySelectorAll('tbody tr'));
    const pageSizeSelect = document.getElementById('pageSizeSelect');
    const prevBtn = document.getElementById('prevPageBtn');
    const nextBtn = document.getElementById('nextPageBtn');
    const paginationInfo = document.getElementById('paginationInfo');
    const currentPageInput = document.getElementById('currentPageInput');
    const searchInput = document.getElementById('searchInput');

    let filteredRows = rows.slice();

    function renderTable() {
        const pageSize = parseInt(pageSizeSelect.value, 10);
        const totalPages = Math.max(1, Math.ceil(filteredRows.length / pageSize));
        let currentPage = parseInt(currentPageInput.value, 10);
        if (currentPage > totalPages) currentPage = 1;
        currentPageInput.value = currentPage;

        // Hide all rows
        rows.forEach(row => row.style.display = 'none');
        // Show only filtered and paginated rows
        filteredRows.forEach((row, idx) => {
            if (idx >= (currentPage - 1) * pageSize && idx < currentPage * pageSize) {
                row.style.display = '';
            }
        });

        paginationInfo.textContent = 'Seite ' + currentPage + ' von ' + totalPages;
        prevBtn.disabled = currentPage <= 1;
        nextBtn.disabled = currentPage >= totalPages;
    }

    function filterRows() {
        const filter = searchInput.value.toLowerCase();
        filteredRows = rows.filter(row => {
            const titleCell = row.querySelector('.entry-title');
            if (!titleCell) return false;
            return titleCell.textContent.toLowerCase().indexOf(filter) > -1;
        });
        currentPageInput.value = 1;
        renderTable();
    }

    // Event-Listener
    pageSizeSelect.addEventListener('change', function() {
        currentPageInput.value = 1;
        renderTable();
    });
    prevBtn.addEventListener('click', function() {
        currentPageInput.value = Math.max(1, parseInt(currentPageInput.value, 10) - 1);
        renderTable();
    });
    nextBtn.addEventListener('click', function() {
        const pageSize = parseInt(pageSizeSelect.value, 10);
        const totalPages = Math.max(1, Math.ceil(filteredRows.length / pageSize));
        currentPageInput.value = Math.min(totalPages, parseInt(currentPageInput.value, 10) + 1);
        renderTable();
    });
    searchInput.addEventListener('keyup', filterRows);

    // Initial render
    filterRows();

    // Delete-Button-Handler (wie gehabt, aber Zeile statt li entfernen)
    document.querySelectorAll('.delete-entry').forEach(function(btn) {
        btn.addEventListener('click', function() {
            if (!confirm('Eintrag wirklich löschen?')) return;
            var id = this.getAttribute('data-id');
            var row = this.closest('tr');
            fetch('<?= $block->getUrl("bv24tools/index/delete") ?>', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: 'id=' + encodeURIComponent(id) + '&form_key=<?= $block->getFormKey() ?>'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        row.remove();
                        filterRows();
                    } else {
                        alert('Fehler beim Löschen!');
                    }
                });
        });
    });
</script>